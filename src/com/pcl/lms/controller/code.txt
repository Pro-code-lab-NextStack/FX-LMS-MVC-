package com.pathum.lms.controller;

import com.pathum.lms.DB.Database;
import com.pathum.lms.env.StaticResource;
import com.pathum.lms.model.User;
import com.pathum.lms.utils.tools.VerificationCodeGenerator;
import jakarta.mail.*;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import javafx.event.ActionEvent;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;

//import javax.mail.Message;
//import javax.mail.Session;
//import javax.mail.Transport;
//import javax.mail.internet.InternetAddress;
//import javax.mail.internet.MimeMessage;
import java.io.IOException;
import java.net.URL;
import java.util.Optional;
import java.util.Properties;

public class EmailVerificationFormController {
    public AnchorPane context;
    public Label lblCompany;
    public Label lblVersion;
    public TextField txtEmail;
    private int generatedOTP;

    public void initialize() {
        setStaticData();
    }

    private void setStaticData() {
        lblCompany.setText(StaticResource.getCompany());
        lblVersion.setText(StaticResource.getVersion());
    }

    public void navigateVerifyCodeOnAction(ActionEvent actionEvent) throws IOException {
        try{
            final String fromEmail = "loopinfinite760@gmail.com";
            final String password = "ylgc lmfp mccq fkth";
            final String toEmail = txtEmail.getText();
            Optional<User> selectedUser = Database.userTable.stream().filter(user -> user.getEmail().equals(toEmail)).findFirst();
            if (selectedUser.isPresent()) {

                int otp = new VerificationCodeGenerator().getCode(4);
                this.generatedOTP = otp;

                Properties properties = new Properties();
                properties.put("mail.smtp.host", "smtp.gmail.com");
                properties.put("mail.smtp.auth", "true");
                properties.put("mail.smtp.starttls.enable", "true");
                properties.put("mail.smtp.port", "587");

                Session session = Session.getInstance(properties, new Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(fromEmail, password);
                    }
                });

                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress(fromEmail));
                message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
                message.setSubject("Email Verification Code");
                message.setText("Your OTP is: " + otp);

                Transport.send(message);
                System.out.println("OTP sent successfully to " + toEmail);

                FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/pathum/lms/view/VerifyOTPForm.fxml"));
                Parent parent = loader.load();
                VerifyOTPFormController controller = loader.getController();
                controller.setVerificationData(generatedOTP, toEmail);
                Stage stage= (Stage) context.getScene().getWindow();
                stage.setScene(new Scene(parent));
            }
        }catch (Exception e){
            throw new RuntimeException();
        }

        setUi("VerifyOTPForm");
    }

    public void backToHomeOnAction(ActionEvent actionEvent) throws IOException {
        setUi("WelcomeScreenForm");
    }

    private void setUi(String location) throws IOException {
        URL resource = getClass().getResource("/com/pathum/lms/view/"+location+".fxml");
        Parent load = FXMLLoader.load(resource);
        Scene scene = new Scene(load);
        Stage stage = (Stage) context.getScene().getWindow();
        stage.setScene(scene);
    }
}
